---
# Configuration deployment tasks for TabloCrawler
# This file handles templating and deployment of all configuration files

- name: Create configuration directories with proper permissions
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner | default(tablocrawler_user) }}"
    group: "{{ item.group | default(tablocrawler_group) }}"
    mode: "{{ item.mode | default('0755') }}"
  loop:
    - { path: "{{ config_directory }}", mode: '0755' }
    - { path: "{{ data_directory }}", mode: '0755' }
    - { path: "{{ log_directory | default(data_directory + '/logs') }}", mode: '0755' }
    - { path: "{{ backup_directory | default(data_directory + '/backup') }}", mode: '0755' }
  become: true
  tags:
    - configuration
    - directories

- name: Template docker-compose configuration
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "{{ config_directory }}/docker-compose.yml"
    owner: "{{ tablocrawler_user }}"
    group: "{{ tablocrawler_group }}"
    mode: '0644'
    backup: true
  become: true
  register: compose_config_result
  notify:
    - restart tablocrawler container
  tags:
    - configuration
    - docker-compose

- name: Template environment configuration file
  ansible.builtin.template:
    src: tablocrawler.env.j2
    dest: "{{ config_directory }}/tablocrawler.env"
    owner: "{{ tablocrawler_user }}"
    group: "{{ tablocrawler_group }}"
    mode: '0600'  # Sensitive file with secrets
    backup: true
  become: true
  register: env_config_result
  notify:
    - restart tablocrawler container
  tags:
    - configuration
    - environment

- name: Template logging configuration
  ansible.builtin.template:
    src: logging.conf.j2
    dest: "{{ config_directory }}/logging.conf"
    owner: "{{ tablocrawler_user }}"
    group: "{{ tablocrawler_group }}"
    mode: '0644'
    backup: true
  become: true
  register: logging_config_result
  notify:
    - restart tablocrawler container
  tags:
    - configuration
    - logging

- name: Create monitored users file if it doesn't exist
  ansible.builtin.file:
    path: "{{ data_directory }}/monitored-users.txt"
    state: touch
    owner: "{{ tablocrawler_user }}"
    group: "{{ tablocrawler_group }}"
    mode: '0644'
    modification_time: preserve
    access_time: preserve
  become: true
  tags:
    - configuration
    - data-files

- name: Create initial monitoring state file if it doesn't exist
  ansible.builtin.copy:
    content: |
      {
        "last_scan": null,
        "scan_count": 0,
        "deployment_info": {
          "deployed_at": "{{ ansible_date_time.iso8601 }}",
          "deployed_by": "{{ ansible_user }}",
          "host": "{{ inventory_hostname }}",
          "environment": "{{ environment | default('production') }}"
        }
      }
    dest: "{{ data_directory }}/monitoring-state.json"
    owner: "{{ tablocrawler_user }}"
    group: "{{ tablocrawler_group }}"
    mode: '0644'
    force: false  # Don't overwrite existing state
  become: true
  tags:
    - configuration
    - data-files

- name: Set proper ownership for all configuration files
  ansible.builtin.file:
    path: "{{ item }}"
    owner: "{{ tablocrawler_user }}"
    group: "{{ tablocrawler_group }}"
    recurse: false
  loop:
    - "{{ config_directory }}/docker-compose.yml"
    - "{{ config_directory }}/tablocrawler.env"
    - "{{ config_directory }}/logging.conf"
    - "{{ data_directory }}/monitored-users.txt"
    - "{{ data_directory }}/monitoring-state.json"
  become: true
  tags:
    - configuration
    - permissions

- name: Validate configuration file syntax
  ansible.builtin.command:
    cmd: docker compose -f {{ config_directory }}/docker-compose.yml config --quiet
  register: config_validation
  changed_when: false
  become: true
  tags:
    - configuration
    - validation

- name: Display configuration deployment results
  ansible.builtin.debug:
    msg: |
      Configuration deployment completed:
      - Docker Compose config: {{ 'UPDATED' if compose_config_result.changed else 'UNCHANGED' }}
      - Environment config: {{ 'UPDATED' if env_config_result.changed else 'UNCHANGED' }}
      - Logging config: {{ 'UPDATED' if logging_config_result.changed else 'UNCHANGED' }}
      - Configuration validation: {{ 'PASSED' if config_validation.rc == 0 else 'FAILED' }}
      - Config directory: {{ config_directory }}
      - Data directory: {{ data_directory }}
  tags:
    - configuration
    - reporting